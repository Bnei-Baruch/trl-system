name: Deploy TRL System

on:
  push:
    branches:
      - master
      - prod

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    # Set environment based on the branch
    environment: ${{ github.ref == 'refs/heads/master' && 'dev' || 'prod' }}
    env:
      NODE_VERSION: 16
    
    # Define a matrix of applications to build and deploy
    strategy:
      matrix:
        app: [
        #   'MqttMerkaz',
          'MqttClient',
        #   'HttpClient',
        #   'MqttAdmin',
        #   'HttpAdmin',
        #   'TrlChat',
        #   'WeMain',
        #   'WeClient',
        #   'WeHttpStream'
        ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: env vars from dotenv
        run: echo "${{ vars.DOT_ENV_VARS }}" > .env
        # env:
        #   DOT_ENV_VARS: ${{ vars.DOT_ENV_VARS }}

      # Build the specific application from the matrix
      - name: Build ${{ matrix.app }}
        run: npm run build:$(echo "${{ matrix.app }}" | tr '[:upper:]' '[:lower:]')

      # Setup SSH with direct key file
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      
      # Prepare build archive
      - name: Prepare build archive
        run: tar -czf build.tar.gz -C build .
      
      # Delete previous backups on remote
      - name: Delete previous backup
        run: ssh -o StrictHostKeyChecking=no ${{ vars.DEPLOY_SERVER_USER }}@${{ vars.DEPLOY_SERVER_ADDR }} "cd ${{ vars.DEPLOY_SERVER_DIR }}/ && rm -rf ${{ matrix.app }}.bak"
      
      # Backup current deployment
      - name: Backup current deployment
        run: ssh -o StrictHostKeyChecking=no ${{ vars.DEPLOY_SERVER_USER }}@${{ vars.DEPLOY_SERVER_ADDR }} "cd ${{ vars.DEPLOY_SERVER_DIR }}/ && [ -d ${{ matrix.app }} ] && mv ${{ matrix.app }} ${{ matrix.app }}.bak || echo 'No previous deployment to backup'"
      
      # Create directory for new deployment
      - name: Create deployment directory
        run: ssh -o StrictHostKeyChecking=no ${{ vars.DEPLOY_SERVER_USER }}@${{ vars.DEPLOY_SERVER_ADDR }} "mkdir -p ${{ vars.DEPLOY_SERVER_DIR }}/${{ matrix.app }}"
      
      # Upload build archive
      - name: Upload build archive
        run: scp -o StrictHostKeyChecking=no build.tar.gz ${{ vars.DEPLOY_SERVER_USER }}@${{ vars.DEPLOY_SERVER_ADDR }}:${{ vars.DEPLOY_SERVER_DIR }}/${{ matrix.app }}/
      
      # Extract build archive
      - name: Extract build archive
        run: ssh -o StrictHostKeyChecking=no ${{ vars.DEPLOY_SERVER_USER }}@${{ vars.DEPLOY_SERVER_ADDR }} "cd ${{ vars.DEPLOY_SERVER_DIR }}/${{ matrix.app }}/ && tar -xzf build.tar.gz && rm build.tar.gz"
      
      # Cleanup SSH key
      - name: Cleanup SSH key
        if: always()
        run: rm -f ~/.ssh/id_rsa 